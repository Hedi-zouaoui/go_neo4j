name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      



      - name: Build add user microservice 
        working-directory: add_user_microservice/utils
        run: go build -v
      - name: Build delete user microservice 
        working-directory: delete_microservice/utils
        run: go build -v
      - name: Build trasnfer user microservice 
        working-directory: transfer_user_microservice/utils
        run: go build -v

  test:
    needs: build  # Ensure that this job depends on the "Build" job
    runs-on: ubuntu-latest

    steps:
      - uses : actions/checkout@v3
      - uses : actions/setup-go@v4 
      - name: neo4j
        run: |
         docker run \
          --name testneo4j \
          -p 7474:7474 -p 7687:7687 \
          -d \
          -v $HOME/neo4j/data:/data \
          -v $HOME/neo4j/logs:/logs \
          -v $HOME/import:/var/lib/neo4j/import \
          -v $HOME/neo4j/plugins:/plugins \
          --env NEO4J_AUTH=none \
          --env apoc.import.file.enabled=true \
          neo4j:latest
      - name: Install Cypher-Shell
        run: |
          wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -
          echo 'deb https://debian.neo4j.com stable 4.4' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
          sudo apt-get update
          sudo apt-get install cypher-shell

      - name: Import Data into Neo4j
        run: |
          ls import  # Verify that the import folder contains your import script and CSV file
          cypher-shell -u neo4j -p neo4j -a bolt://localhost:7687 -f import/import_script.cypher

      - name: Test the add advisor microservice
       
        working-directory: add_user_microservice/utils
        run: go test -v
        
      - name: Test the delete advisor microservice
       
        working-directory: delete_microservice/utils
        run: go test -v 
      - name: Test the transfer advisor microservice
       
        working-directory: transfer_user_microservice/utils
        run: go test -v 
  push-image-to-docker-hub:  # job name
        runs-on: ubuntu-latest  # runner name : (ubuntu latest version) 
        steps:
        - uses: actions/checkout@v2 # first action : checkout source code
        - name: docker login
          run: | # log into docker hub account
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD  
        - name: Get current date # get the date of the build
          id: date
          run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
        - name: Build the Docker image # push The image to the docker hub
          run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
        - name: Docker Push
          run: docker push $DOCKER_USER/golang_pfa:${{ steps.date.outputs.date }}