name: Go CI/CD Workflow with Neo4j

on:
  push:
    branches:
      - main # Adjust this to the branch you want to trigger the workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      neo4j:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/password # Change the username and password as needed
        ports:
          - 7687:7687
        options: --health-cmd "curl --fail http://localhost:7474 || exit 1"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16 # Adjust the Go version as needed

      - name: Assess Code Syntax (Optional)
        run: |
          # You can use a Go linter like 'golangci-lint' here
          go get -u github.com/golangci/golangci-lint/cmd/golangci-lint
          golangci-lint run
        continue-on-error: true

      - name: Run Unit Tests with Neo4j
        run: |
          # Start the Neo4j service
          docker-compose up -d neo4j

          # Run your Go unit tests that interact with Neo4j
          go test ./...

          # Stop the Neo4j service
          docker-compose down
        env:
          NEO4J_URI: "bolt://localhost:7687"
          NEO4J_USERNAME: "neo4j"
          NEO4J_PASSWORD: "12345678"

      - name: Build Binaries
        run: go build -o myapp

      - name: Build Docker Image
        run: |
          # Build a Docker image for your Go application
          docker build -t myapp-image .
        continue-on-error: true

      - name: Push Docker Image to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true

      - name: Push Docker Image
        run: |
          # Push the Docker image to Docker Hub
          docker push yourusername/myapp-image:latest
        continue-on-error: true
